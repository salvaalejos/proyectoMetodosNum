/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Panel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DocumentFilter;
import net.objecthunter.exp4j.Expression;
import net.objecthunter.exp4j.ExpressionBuilder;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;


/**
 *
 * @author hfyh
 */
public class MetodoBiseccion extends javax.swing.JFrame {

    /**
     * Creates new form MetodoBiseccion
     */
    private String funcion;
    double a;
    double b;
    double tol;
    
    public MetodoBiseccion() {
        initComponents();
    }
    
    public MetodoBiseccion(String funcion) {
        this.funcion = funcion;
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Metodo de bisección");
    }
    
    public static double evaluarFuncion(String funcion, double x) {
        try {
            Expression expresion = new ExpressionBuilder(funcion)
                    .variable("x")
                    .variable("e")
                    .build()
                    .setVariable("x", x)
                    .setVariable("e", Math.E);
            return expresion.evaluate();
        } catch (Exception e) {
            return Double.NaN; 
        }
    }
    
    public static List<String> biseccion(String funcion, double a, double b, double ans, XYSeries series) {
        List<String> iterador = new ArrayList<>();

        double fa = evaluarFuncion(funcion, a);
        double fb = evaluarFuncion(funcion, b);

        if (fa * fb >= 0) {
            JOptionPane.showMessageDialog(null,
                    "El método de bisección no puede aplicarse porque los signos de f(a) y f(b) no son opuestos.",
                    "Error",JOptionPane.ERROR_MESSAGE);
            return iterador;
        }
        
        double m = a;
        double error = Double.MAX_VALUE;
        int i = 0;
        double prevm = m;

        while (error > ans && i < 100 ) {
            i++;
            m = (a + b) / 2.0;
            double fm = evaluarFuncion(funcion, m);

            if (Double.isNaN(fm)) {
                JOptionPane.showMessageDialog(null,
                    "Error al evaluar la función en el punto medio.",
                    "Error",JOptionPane.ERROR_MESSAGE);
                break;
            }

            error = Math.abs((m - prevm) / m);  // Error 
            iterador.add(String.format("%-4d %-10.6f %-10.6f %-10.6f %-10.6f %-10.6f %-10.6f %-10.6f", 
                i, a, fa, b, fb, m, fm, error));

            if (fm == 0) {
                break; // c es la raíz exacta
            } else if (fa * fm < 0) {
                b = m; // La raíz está en [a, m]
                fb = fm;
            } else {
                a = m; // La raíz está en [m, b]
                fa = fm; // Actualizar f(a) para la siguiente iteración
            }

            prevm = m; // Actualizar valor anterior de m

            series.add(a, fa);// Gráfica
            series.add(b, fb);// Gráfica
        }

        return iterador;
    }

    public static void graficarFuncion(String funcion, double a, double b, JPanel panel) {
        XYSeries series = new XYSeries("f(x)");

        for (double x = a; x <= b; x += 0.1) {
            double y = evaluarFuncion(funcion, x);
            if (!Double.isNaN(y)) {
                series.add(x, y);
            }
        }
        XYSeriesCollection dataset = new XYSeriesCollection();
        dataset.addSeries(series);

        JFreeChart chart = ChartFactory.createXYLineChart(
                "Gráfica de la Función",
                "x",
                "f(x)",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        panel.removeAll();
        panel.setLayout(new BorderLayout());
        panel.add(new ChartPanel(chart), BorderLayout.CENTER);
        
        panel.revalidate();
        panel.repaint();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgBiseccion = new javax.swing.JPanel();
        panelGrafica = new javax.swing.JPanel();
        panelLimits = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fieldLimitB = new javax.swing.JTextField();
        fieldLimitA = new javax.swing.JTextField();
        btnConfirmar = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        fieldTolerancy = new javax.swing.JTextField();
        btnClean = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblFuncion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaIteraciones = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        bgBiseccion.setBackground(new java.awt.Color(205, 245, 253));
        bgBiseccion.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout panelGraficaLayout = new javax.swing.GroupLayout(panelGrafica);
        panelGrafica.setLayout(panelGraficaLayout);
        panelGraficaLayout.setHorizontalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 540, Short.MAX_VALUE)
        );
        panelGraficaLayout.setVerticalGroup(
            panelGraficaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        bgBiseccion.add(panelGrafica, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 340));

        panelLimits.setBackground(new java.awt.Color(160, 233, 255));

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Limite a:");

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Limite b:");

        fieldLimitB.setBackground(new java.awt.Color(160, 233, 255));
        fieldLimitB.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        fieldLimitB.setForeground(new java.awt.Color(0, 0, 0));
        fieldLimitB.setText("5");
        fieldLimitB.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
        fieldLimitB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldLimitBFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldLimitBFocusLost(evt);
            }
        });
        fieldLimitB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldLimitBKeyTyped(evt);
            }
        });

        fieldLimitA.setBackground(new java.awt.Color(160, 233, 255));
        fieldLimitA.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        fieldLimitA.setForeground(new java.awt.Color(0, 0, 0));
        fieldLimitA.setText("0");
        fieldLimitA.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
        fieldLimitA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldLimitAFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldLimitAFocusLost(evt);
            }
        });
        fieldLimitA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldLimitAKeyTyped(evt);
            }
        });

        btnConfirmar.setBackground(new java.awt.Color(0, 169, 255));
        btnConfirmar.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnConfirmar.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmar.setText("Confirmar");
        btnConfirmar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(254, 174, 187));
        btnBack.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(51, 51, 51));
        btnBack.setText("Volver");
        btnBack.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Tolerancia");

        fieldTolerancy.setBackground(new java.awt.Color(160, 233, 255));
        fieldTolerancy.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        fieldTolerancy.setForeground(new java.awt.Color(0, 0, 0));
        fieldTolerancy.setText("0.001");
        fieldTolerancy.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
        fieldTolerancy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldTolerancyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldTolerancyFocusLost(evt);
            }
        });
        fieldTolerancy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fieldTolerancyKeyTyped(evt);
            }
        });

        btnClean.setBackground(new java.awt.Color(243, 239, 161));
        btnClean.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        btnClean.setForeground(new java.awt.Color(0, 0, 0));
        btnClean.setText("Limpiar");
        btnClean.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 169, 255));

        lblFuncion.setFont(new java.awt.Font("Roboto Light", 0, 12)); // NOI18N
        lblFuncion.setForeground(new java.awt.Color(255, 255, 255));
        lblFuncion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFuncion.setText("Funcion");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFuncion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFuncion, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panelLimitsLayout = new javax.swing.GroupLayout(panelLimits);
        panelLimits.setLayout(panelLimitsLayout);
        panelLimitsLayout.setHorizontalGroup(
            panelLimitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelLimitsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLimitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldLimitB)
                    .addComponent(fieldTolerancy, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(fieldLimitA, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelLimitsLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLimitsLayout.setVerticalGroup(
            panelLimitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLimitsLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldLimitA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldLimitB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldTolerancy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClean, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        bgBiseccion.add(panelLimits, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 210, 340));

        jScrollPane1.setBackground(new java.awt.Color(205, 245, 253));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setForeground(new java.awt.Color(0, 0, 0));

        tablaIteraciones.setBackground(new java.awt.Color(205, 245, 253));
        tablaIteraciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tablaIteraciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "n#", "a", "f(a)", "b", "f(b)", "m", "f(m)", "ER"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaIteraciones.setGridColor(new java.awt.Color(0, 169, 255));
        jScrollPane1.setViewportView(tablaIteraciones);

        bgBiseccion.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 750, 220));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgBiseccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgBiseccion, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearAll(){
        fieldLimitA.setText("");
        fieldLimitB.setText("");
        fieldTolerancy.setText("");
        lblFuncion.setText("");
        panelGrafica.removeAll();
        panelGrafica.revalidate();
        panelGrafica.repaint();
    }
    
    private void clearFunction(){
        fieldLimitA.setText("");
        fieldLimitB.setText("");
        fieldTolerancy.setText("");
        panelGrafica.removeAll();
        panelGrafica.revalidate();
        panelGrafica.repaint();
        JTable tabla = tablaIteraciones;
        tabla.removeAll();
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        model.setRowCount(0);
    }
    
    private void iterar(JTable tabla){
        DefaultTableModel model = (DefaultTableModel) tabla.getModel();
        model.setRowCount(0);
        
        
        XYSeries series = new XYSeries("Iteraciones");
        List<String> iteraciones = biseccion(funcion, a, b, tol, series);
        for (String row : iteraciones) {
            String [] columns = row.split("\\s+");
            model.addRow(columns);
        }
    }
    
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        new ObtenerFuncion(1).setVisible(true);
        clearAll();
        dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        try {
            if (fieldLimitA.getText().isEmpty()){
                fieldLimitA.setText("-5");
            } 
            if(fieldLimitB.getText().isEmpty()){
                fieldLimitB.setText("5");
            } 
            if(fieldTolerancy.getText().isEmpty()){
                fieldTolerancy.setText("0.001");
            }
            this.a = Double.parseDouble(fieldLimitA.getText());
            this.b = Double.parseDouble(fieldLimitB.getText());
            this.tol = Double.parseDouble(fieldTolerancy.getText());
            graficarFuncion(funcion, a, b, panelGrafica);
            iterar(tablaIteraciones);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void fieldLimitBFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldLimitBFocusLost
        // TODO add your handling code here:
        fieldLimitB.setBackground(new Color(160,233,255));
    }//GEN-LAST:event_fieldLimitBFocusLost

    private void fieldLimitBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldLimitBFocusGained
        // TODO add your handling code here:
        fieldLimitB.setBackground(new Color(205,245,253));
    }//GEN-LAST:event_fieldLimitBFocusGained

    private void fieldLimitAFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldLimitAFocusLost
        // TODO add your handling code here:
        fieldLimitA.setBackground(new Color(160,233,255));
    }//GEN-LAST:event_fieldLimitAFocusLost

    private void fieldLimitAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldLimitAFocusGained
        // TODO add your handling code here:
        fieldLimitA.setBackground(new Color(205,245,253));
    }//GEN-LAST:event_fieldLimitAFocusGained

    private void fieldLimitAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldLimitAKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            evt.consume();
        }
    }//GEN-LAST:event_fieldLimitAKeyTyped

    private void fieldLimitBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldLimitBKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            evt.consume();
        }
    }//GEN-LAST:event_fieldLimitBKeyTyped

    private void fieldTolerancyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldTolerancyFocusGained
        // TODO add your handling code here:
        fieldTolerancy.setBackground(new Color(205,245,253));
    }//GEN-LAST:event_fieldTolerancyFocusGained

    private void fieldTolerancyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldTolerancyFocusLost
        // TODO add your handling code here:
        fieldTolerancy.setBackground(new Color(160,233,255));
    }//GEN-LAST:event_fieldTolerancyFocusLost

    private void fieldTolerancyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldTolerancyKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isLetter(c)){
            evt.consume();
        }
    }//GEN-LAST:event_fieldTolerancyKeyTyped

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        // TODO add your handling code here:
        clearFunction();
    }//GEN-LAST:event_btnCleanActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        lblFuncion.setText(funcion);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MetodoBiseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MetodoBiseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MetodoBiseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MetodoBiseccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MetodoBiseccion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgBiseccion;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JTextField fieldLimitA;
    private javax.swing.JTextField fieldLimitB;
    private javax.swing.JTextField fieldTolerancy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFuncion;
    private javax.swing.JPanel panelGrafica;
    private javax.swing.JPanel panelLimits;
    private javax.swing.JTable tablaIteraciones;
    // End of variables declaration//GEN-END:variables
}
